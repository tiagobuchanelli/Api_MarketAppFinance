// <auto-generated />
using System;
using Api_MarketAppFinance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api_MarketAppFinance.Infrastructure.Migrations
{
    [DbContext(typeof(ContextoBase))]
    [Migration("20220122012037_AjusteCodigoEmpresa")]
    partial class AjusteCodigoEmpresa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Classificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Classificacao", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<string>("Letra")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("PrDesconto")
                        .HasColumnType("numeric");

                    b.Property<string>("Rua")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Telefone1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefone2")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("ValorLimiteVenda")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorMinimoVenda")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.ContaAPagar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("CarteiraId")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoLancamentoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("NumeroDocumento")
                        .HasColumnType("numeric");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CarteiraId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("ContasAPagar", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.ContaAPagarParcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaAPagarId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DataPagamento")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("ValorAcrescimo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorSaldo")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContaAPagarId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FormaPagamentoId");

                    b.ToTable("ContaAPagarParcelas", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.ContaAReceber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("CarteiraId")
                        .HasColumnType("integer");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoLancamentoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("NumeroDocumento")
                        .HasColumnType("numeric");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CarteiraId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FormaPagamentoId");

                    b.ToTable("ContasAReceber", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.ContaAReceberParcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaAReceberId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("ValorAcrescimo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorSaldo")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContaAReceberId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FormaPagamentoId");

                    b.ToTable("ContaAReceberParcelas", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<string>("Letra")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("PrDesconto")
                        .HasColumnType("numeric");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Rua")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Telefone1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefone2")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("ValorLimiteVenda")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorMinimoVenda")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Fornecedores", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.ImagemProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ImagensProduto", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DataFabricacao")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("NumeroEmbalagem")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NumeroLote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Lotes", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Marcas", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.MovimentacaoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CodigoItem")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoLancamento")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("date");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("OrigemMovimentacaoProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("QuantidadeEntrada")
                        .HasColumnType("numeric");

                    b.Property<decimal>("QuantidadeSaida")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SaldoAnterior")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("OrigemMovimentacaoProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("MovimentacaoProdutos", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.MovimentacaoProdutoLote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CodigoItem")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoLancamento")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("date");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("LoteId")
                        .HasColumnType("integer");

                    b.Property<int>("OrigemMovimentacaoProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("QuantidadeEntrada")
                        .HasColumnType("numeric");

                    b.Property<decimal>("QuantidadeSaida")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SaldoAnterior")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("LoteId");

                    b.HasIndex("OrigemMovimentacaoProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("MovimentacaoProdutoLotes", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.OrigemMovimentacaoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("OrigemMovimentacaoProdutos", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AliquotaIcmsDentroUf")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AliquotaIpi")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Altura")
                        .HasColumnType("numeric");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<int>("ClassificacaoId")
                        .HasColumnType("integer");

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CodigoIdentificacao")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("ControlaEstoqueLote")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("DescricaoVenda")
                        .HasColumnType("varchar(300)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Espessura")
                        .HasColumnType("numeric");

                    b.Property<decimal>("EstoqueMinimo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Largura")
                        .HasColumnType("numeric");

                    b.Property<int>("MarcaId")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ObservacaoVenda")
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("PercentualDesconto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PercentualLucro")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PesoBruto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PesoLiquido")
                        .HasColumnType("numeric");

                    b.Property<int>("SubCategoriaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorCusto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorMinimoVenda")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ClassificacaoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("SubCategoriaId");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.SubCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("SubCategorias", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("CarteiraId")
                        .HasColumnType("integer");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("date");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("NumeroDocumento")
                        .HasColumnType("numeric");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(2000)");

                    b.Property<decimal>("PesoBruto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PesoLiquido")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorAcrescimo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorFrete")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CarteiraId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FormaPagamentoId");

                    b.ToTable("Vendas", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.VendaFormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CarteiraId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.Property<int>("VendaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarteiraId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("VendaId");

                    b.ToTable("VendaFormasPagamento", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.VendaParcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("numeric");

                    b.Property<int>("VendaFormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("VendaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("VendaFormaPagamentoId");

                    b.HasIndex("VendaId");

                    b.ToTable("VendaParcelas", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.VendaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CodigoItem")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("PesoBruto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PesoLiquido")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrDesconto")
                        .HasColumnType("numeric");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorAscrcescimo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("numeric");

                    b.Property<int>("VendaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("VendaProdutos", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Carteira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abreviacao")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorMinimoVenda")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Carteiras", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CodigoIbge")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoIbgeEstado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("SiglaEstado")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Cidades", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Empresas", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("Cep")
                        .HasColumnType("text");

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoEntidade")
                        .HasColumnType("integer");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abreviacao")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("CarteiraId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("DiaPadraoVencimento")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("GerarFinanceiro")
                        .HasColumnType("boolean");

                    b.Property<decimal>("NrDiasIntervalo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("NrDiasLimiteIntervalo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("NrIntervalos")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrAcrescimo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrDesconto")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorAcrescimo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CarteiraId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("FormasPagamento", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Licenca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroAcessosPermitido")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Licencas", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.LicencaAcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("DispositivoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("LicencaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DispositivoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("LicencaId");

                    b.ToTable("LicencaAcessos", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.LicencaDispositivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Dispositivos", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.LogRegistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChaveTabela")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Tabela")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<string>("ValorAnterior")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ValorAtual")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LogsRegistros", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Categoria", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Classificacao", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Cliente", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.ContaAPagar", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Carteira", "Carteira")
                        .WithMany()
                        .HasForeignKey("CarteiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carteira");

                    b.Navigation("Empresa");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.ContaAPagarParcela", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.ContaAPagar", "ContaAPagar")
                        .WithMany()
                        .HasForeignKey("ContaAPagarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaAPagar");

                    b.Navigation("Empresa");

                    b.Navigation("FormaPagamento");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.ContaAReceber", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Carteira", "Carteira")
                        .WithMany()
                        .HasForeignKey("CarteiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carteira");

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("FormaPagamento");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.ContaAReceberParcela", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.ContaAReceber", "ContaAReceber")
                        .WithMany()
                        .HasForeignKey("ContaAReceberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaAReceber");

                    b.Navigation("Empresa");

                    b.Navigation("FormaPagamento");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Fornecedor", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.ImagemProduto", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Lote", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Marca", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.MovimentacaoProduto", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.OrigemMovimentacaoProduto", "OrigemMovimentacaoProduto")
                        .WithMany()
                        .HasForeignKey("OrigemMovimentacaoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("OrigemMovimentacaoProduto");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.MovimentacaoProdutoLote", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Lote", "Lote")
                        .WithMany()
                        .HasForeignKey("LoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.OrigemMovimentacaoProduto", "OrigemMovimentacaoProduto")
                        .WithMany()
                        .HasForeignKey("OrigemMovimentacaoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Lote");

                    b.Navigation("OrigemMovimentacaoProduto");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Produto", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Classificacao", "Classificacao")
                        .WithMany()
                        .HasForeignKey("ClassificacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.SubCategoria", "SubCategoria")
                        .WithMany()
                        .HasForeignKey("SubCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Classificacao");

                    b.Navigation("Empresa");

                    b.Navigation("Marca");

                    b.Navigation("SubCategoria");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.SubCategoria", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Categoria", "Categoria")
                        .WithMany("SubCategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Venda", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Carteira", "Carteira")
                        .WithMany()
                        .HasForeignKey("CarteiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carteira");

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("FormaPagamento");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.VendaFormaPagamento", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Carteira", "Carteira")
                        .WithMany()
                        .HasForeignKey("CarteiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Venda", "Venda")
                        .WithMany()
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carteira");

                    b.Navigation("Empresa");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.VendaParcela", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.VendaFormaPagamento", "VendaFormaPagamento")
                        .WithMany()
                        .HasForeignKey("VendaFormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Venda", "Venda")
                        .WithMany()
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Venda");

                    b.Navigation("VendaFormaPagamento");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.VendaProduto", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entidades.Venda", "Venda")
                        .WithMany()
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Carteira", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Empresa", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.FormaPagamento", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Carteira", "Carteira")
                        .WithMany()
                        .HasForeignKey("CarteiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carteira");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Licenca", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Licenses")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.LicencaAcesso", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.LicencaDispositivo", "Dispositivo")
                        .WithMany()
                        .HasForeignKey("DispositivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Licenca", "Licenca")
                        .WithMany()
                        .HasForeignKey("LicencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispositivo");

                    b.Navigation("Empresa");

                    b.Navigation("Licenca");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.LicencaDispositivo", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Devices")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.LogRegistro", b =>
                {
                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_MarketAppFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entidades.Categoria", b =>
                {
                    b.Navigation("SubCategorias");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Licenses");
                });

            modelBuilder.Entity("Api_MarketAppFinance.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
